{
    "openapi": "3.0.0",
    "info": {
        "title": "Devices",
        "version": "1.0",
        "description": "<span style=\"font-size: 3em; color: #5D535E;\">\n <i class=\"fas fa-robot fa-2x\"></i> <i>CloudHome\n</i></span> \n</br>\n</br>\n\nInteract with the `'Devices'` API to get a list of registered devices, add or remove devices and to update existing records.\n\nUse this API to leverage __*CloudHome*__'s central repository of devices that allow's users to manage automation systems at home, at work or on the go.",
        "contact": {
            "name": "Stephen Price",
            "url": "https://www.linkedin.com/in/slprice/",
            "email": "stephen@stoplight.io"
        },
        "termsOfService": "cloudhome.io/api/devices/terms",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "https://cloudhome.io",
            "description": "CloudHome device platform"
        }
    ],
    "paths": {
        "/api/devices/{accountid}": {
            "get": {
                "summary": "getDevices",
                "tags": [
                    "devices",
                    "IOT"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "Device",
                                        "type": "object",
                                        "x-tags": [
                                            "devices",
                                            "IOT"
                                        ],
                                        "description": "Describes a device activated on a **CloudHome** account. Each class can contain more than one device and location, centrally managed by the CloudHome service cloud.",
                                        "x-examples": {
                                            "devices": [
                                                {
                                                    "deviceID": "123",
                                                    "deviceName": "frontDoorLock",
                                                    "deviceClass": "safety",
                                                    "spaceID": "home",
                                                    "alexaCompatible": true,
                                                    "storageUsed": 0.003,
                                                    "storageFree": 1
                                                },
                                                {
                                                    "deviceID": "456",
                                                    "deviceName": "thermostat",
                                                    "deviceClass": "comfort",
                                                    "spaceID": "home",
                                                    "alexaCompatible": true,
                                                    "storageUsed": 0.025,
                                                    "storageFree": 1
                                                },
                                                {
                                                    "deviceID": "789",
                                                    "deviceName": "sprinkler",
                                                    "deviceClass": "convenience",
                                                    "spaceID": "yard",
                                                    "alexaCompatible": false,
                                                    "storageUsed": 0.0018,
                                                    "storageFree": 1
                                                }
                                            ],
                                            "device": [
                                                {
                                                    "deviceID": "abc",
                                                    "deviceName": "welcomeDroid",
                                                    "deviceClass": "commercial",
                                                    "spaceID": "office",
                                                    "alexaCompatible": true,
                                                    "storageUsed": 137,
                                                    "storageFree": 300
                                                }
                                            ]
                                        },
                                        "properties": {
                                            "deviceID": {
                                                "type": "string",
                                                "description": "generated by the backend"
                                            },
                                            "deviceName": {
                                                "type": "string",
                                                "description": "user generated name"
                                            },
                                            "deviceClass": {
                                                "type": "string"
                                            },
                                            "spaceID": {
                                                "type": "string"
                                            },
                                            "alexaCompatible": {
                                                "type": "boolean"
                                            },
                                            "storageUsed": {
                                                "type": "number",
                                                "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)\n"
                                            },
                                            "storageFree": {
                                                "type": "number",
                                                "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)"
                                            },
                                            "dateCreated": {
                                                "type": "string",
                                                "example": "2017-07-21T17:32:28Z"
                                            },
                                            "dateUpdated": {
                                                "type": "string",
                                                "example": "2017-07-21T17:32:28Z"
                                            }
                                        },
                                        "required": [
                                            "deviceName"
                                        ]
                                    }
                                },
                                "examples": {
                                    "devices": {
                                        "value": [
                                            {
                                                "deviceID": "123",
                                                "deviceName": "frontDoorLock",
                                                "deviceClass": "safety",
                                                "spaceID": "home",
                                                "alexaCompatible": true,
                                                "storageUsed": 0.003,
                                                "storageFree": 1,
                                                "dateCreated": "2017-05-21T20:34:25+42:01",
                                                "dateUpdated": "2018-01-29T20:36:30+00:00"
                                            },
                                            {
                                                "deviceID": "456",
                                                "deviceName": "thermostat",
                                                "deviceClass": "comfort",
                                                "spaceID": "home",
                                                "alexaCompatible": true,
                                                "storageUsed": 0.025,
                                                "storageFree": 1,
                                                "dateCreated": "2019-07-20T15:27:32+18:21",
                                                "dateUpdated": "2020-03-01T22:13:24+00:03"
                                            },
                                            {
                                                "deviceID": "789",
                                                "deviceName": "sprinkler",
                                                "deviceClass": "convenience",
                                                "spaceID": "yard",
                                                "alexaCompatible": false,
                                                "storageUsed": 0.0018,
                                                "storageFree": 1,
                                                "dateCreated": "2020-06-18T11:23:29+44:12",
                                                "dateUpdated": "2020-06-18T11:23:29+44:12"
                                            }
                                        ]
                                    },
                                    "device": {
                                        "value": [
                                            {
                                                "deviceID": "abc",
                                                "deviceName": "welcomeDroid",
                                                "deviceClass": "commercial",
                                                "spaceID": "office",
                                                "alexaCompatible": true,
                                                "storageUsed": 137,
                                                "storageFree": 300,
                                                "dateCreated": "2019-07-20T15:27:32+18:21",
                                                "dateUpdated": "2020-03-01T22:13:24+00:03"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    }
                },
                "operationId": "get-api-devices",
                "description": "<span style=\"font-size: 1.5em; color: #5D535E;\">\n <i class=\"fas fa-robot fa-xs fa-pulse\"></i> getDevices\n</span>\n\nReturns a list of devices for an account at a given space (or all spaces if using the default value `'all'`). A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when requesting devices. The response can be further defined by limiting the number of results or sorting them as required.\n\nIf specific devices are desired, users can specify the `'deviceid'` or multiple thereof values in the header.\n\nMore information about required parameters and authentication can be seen below.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "seattle-office",
                            "default": "all"
                        },
                        "in": "query",
                        "name": "spaceid",
                        "description": "location associated with the devices (see `'My Spaces'` for more information)",
                        "allowEmptyValue": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc",
                            "example": "asc"
                        },
                        "in": "query",
                        "name": "sort",
                        "allowEmptyValue": true,
                        "description": "will sort objects returned from the request"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "format": "int32",
                            "example": 15,
                            "maximum": 25,
                            "minimum": 1
                        },
                        "in": "query",
                        "name": "limit",
                        "allowEmptyValue": true,
                        "description": "specify the number of results returned from the request"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "example": "123abc"
                        },
                        "in": "header",
                        "name": "deviceid",
                        "description": "unique identifiers for devices registered on the service cloud, when empty it defaults to `'all'`",
                        "allowEmptyValue": true,
                        "required": true
                    }
                ]
            },
            "post": {
                "summary": "newDevice",
                "tags": [
                    "devices",
                    "IOT"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Status",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Generic status response schema for successful requests."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    }
                },
                "operationId": "post-api-devices",
                "description": "<span style=\"font-size: 1.5em; color: #5D535E;\">\n <i class=\"fas fa-robot fa-xs fa-pulse\"></i> newDevice\n</span>\n\nAdd new devices to the CloudHome service cloud. A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when posting new devices. Users are limited to posting _**10 devices per request**_, further quantities of devices must be paginated.\n\nMore information about required parameters and authentication can be seen below.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "seattle-office",
                            "default": "all"
                        },
                        "in": "query",
                        "name": "spaceid",
                        "description": "location associated with the devices (see `'My Spaces'` for more information)",
                        "allowEmptyValue": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "default": "newDevice",
                            "example": "garageCamera"
                        },
                        "in": "header",
                        "name": "deviceName",
                        "description": "devices in the same space require unique names or will be assigned the default name `'newDevice'`",
                        "allowEmptyValue": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "title": "Device",
                                    "type": "object",
                                    "x-tags": [
                                        "devices",
                                        "IOT"
                                    ],
                                    "description": "Describes a device activated on a **CloudHome** account. Each class can contain more than one device and location, centrally managed by the CloudHome service cloud.",
                                    "x-examples": {
                                        "devices": [
                                            {
                                                "deviceID": "123",
                                                "deviceName": "frontDoorLock",
                                                "deviceClass": "safety",
                                                "spaceID": "home",
                                                "alexaCompatible": true,
                                                "storageUsed": 0.003,
                                                "storageFree": 1
                                            },
                                            {
                                                "deviceID": "456",
                                                "deviceName": "thermostat",
                                                "deviceClass": "comfort",
                                                "spaceID": "home",
                                                "alexaCompatible": true,
                                                "storageUsed": 0.025,
                                                "storageFree": 1
                                            },
                                            {
                                                "deviceID": "789",
                                                "deviceName": "sprinkler",
                                                "deviceClass": "convenience",
                                                "spaceID": "yard",
                                                "alexaCompatible": false,
                                                "storageUsed": 0.0018,
                                                "storageFree": 1
                                            }
                                        ],
                                        "device": [
                                            {
                                                "deviceID": "abc",
                                                "deviceName": "welcomeDroid",
                                                "deviceClass": "commercial",
                                                "spaceID": "office",
                                                "alexaCompatible": true,
                                                "storageUsed": 137,
                                                "storageFree": 300
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "deviceID": {
                                            "type": "string",
                                            "description": "generated by the backend"
                                        },
                                        "deviceName": {
                                            "type": "string",
                                            "description": "user generated name"
                                        },
                                        "deviceClass": {
                                            "type": "string"
                                        },
                                        "spaceID": {
                                            "type": "string"
                                        },
                                        "alexaCompatible": {
                                            "type": "boolean"
                                        },
                                        "storageUsed": {
                                            "type": "number",
                                            "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)\n"
                                        },
                                        "storageFree": {
                                            "type": "number",
                                            "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)"
                                        },
                                        "dateCreated": {
                                            "type": "string",
                                            "example": "2017-07-21T17:32:28Z"
                                        },
                                        "dateUpdated": {
                                            "type": "string",
                                            "example": "2017-07-21T17:32:28Z"
                                        }
                                    },
                                    "required": [
                                        "deviceName"
                                    ]
                                }
                            }
                        }
                    },
                    "description": "The only required field to add a new device is `'deviceName'`, however if left empty it will default to `'newDevice'`. CloudHome assigns unique identifiers (`'deviceID'`) without user intervention. Additional information can be updated by the user either through the service cloud interface or but using the `'PUT'` operation for this endpoint."
                }
            },
            "put": {
                "summary": "updateDevice",
                "tags": [
                    "devices",
                    "IOT"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Status",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Generic status response schema for successful requests."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    }
                },
                "operationId": "put-api-devices",
                "description": "<span style=\"font-size: 1.5em; color: #5D535E;\">\n <i class=\"fas fa-robot fa-xs fa-pulse\"></i> updateDevice\n</span>\n\nUpdate information for existing devices registerd on the CloudHome service cloud. A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when updating device data. Users are limited to updating _**1 device per request**_ by specifying a `'deviceid'`, further device updates must be paginated.\n\nMore information about required parameters and authentication can be seen below.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "example": "123abc"
                        },
                        "in": "header",
                        "name": "deviceid",
                        "description": "unique identifiers for devices registered on the service cloud, when empty it defaults to `'all'`",
                        "allowEmptyValue": true,
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "seattle-office",
                            "default": "all"
                        },
                        "in": "query",
                        "name": "spaceid",
                        "description": "location associated with the devices (see `'My Spaces'` for more information)",
                        "allowEmptyValue": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Device",
                                "type": "object",
                                "x-tags": [
                                    "devices",
                                    "IOT"
                                ],
                                "description": "Describes a device activated on a **CloudHome** account. Each class can contain more than one device and location, centrally managed by the CloudHome service cloud.",
                                "x-examples": {
                                    "devices": [
                                        {
                                            "deviceID": "123",
                                            "deviceName": "frontDoorLock",
                                            "deviceClass": "safety",
                                            "spaceID": "home",
                                            "alexaCompatible": true,
                                            "storageUsed": 0.003,
                                            "storageFree": 1
                                        },
                                        {
                                            "deviceID": "456",
                                            "deviceName": "thermostat",
                                            "deviceClass": "comfort",
                                            "spaceID": "home",
                                            "alexaCompatible": true,
                                            "storageUsed": 0.025,
                                            "storageFree": 1
                                        },
                                        {
                                            "deviceID": "789",
                                            "deviceName": "sprinkler",
                                            "deviceClass": "convenience",
                                            "spaceID": "yard",
                                            "alexaCompatible": false,
                                            "storageUsed": 0.0018,
                                            "storageFree": 1
                                        }
                                    ],
                                    "device": [
                                        {
                                            "deviceID": "abc",
                                            "deviceName": "welcomeDroid",
                                            "deviceClass": "commercial",
                                            "spaceID": "office",
                                            "alexaCompatible": true,
                                            "storageUsed": 137,
                                            "storageFree": 300
                                        }
                                    ]
                                },
                                "properties": {
                                    "deviceID": {
                                        "type": "string",
                                        "description": "generated by the backend"
                                    },
                                    "deviceName": {
                                        "type": "string",
                                        "description": "user generated name"
                                    },
                                    "deviceClass": {
                                        "type": "string"
                                    },
                                    "spaceID": {
                                        "type": "string"
                                    },
                                    "alexaCompatible": {
                                        "type": "boolean"
                                    },
                                    "storageUsed": {
                                        "type": "number",
                                        "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)\n"
                                    },
                                    "storageFree": {
                                        "type": "number",
                                        "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)"
                                    },
                                    "dateCreated": {
                                        "type": "string",
                                        "example": "2017-07-21T17:32:28Z"
                                    },
                                    "dateUpdated": {
                                        "type": "string",
                                        "example": "2017-07-21T17:32:28Z"
                                    }
                                },
                                "required": [
                                    "deviceName"
                                ]
                            }
                        }
                    },
                    "description": "Beside the fields the user wishes to update, the only field required by this operation is `'deviceid'`, however if left empty it will default to `'all'`. Such a request will result in error code `'400 Bad Request'` as this operation only allows updating one device per request."
                }
            },
            "delete": {
                "summary": "removeDevice",
                "tags": [
                    "devices",
                    "IOT"
                ],
                "operationId": "delete-api-devices",
                "description": "<span style=\"font-size: 1.5em; color: #5D535E;\">\n <i class=\"fas fa-robot fa-xs fa-pulse\"></i> removeDevice\n</span>\n\nDelete devices registerd on the CloudHome service cloud. A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when deleting devices. Users are limited to deleting _**1 device per request**_ by specifying a `'deviceid'`, further device removal must be paginated.\n\nMore information about required parameters and authentication can be seen below.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "example": "123abc"
                        },
                        "in": "header",
                        "name": "deviceid",
                        "description": "unique identifiers for devices registered on the service cloud, when empty it defaults to `'all'`",
                        "allowEmptyValue": true,
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "seattle-office",
                            "default": "all"
                        },
                        "in": "query",
                        "name": "spaceid",
                        "description": "location associated with the devices (see `'My Spaces'` for more information)",
                        "allowEmptyValue": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Device",
                                "type": "object",
                                "x-tags": [
                                    "devices",
                                    "IOT"
                                ],
                                "description": "Describes a device activated on a **CloudHome** account. Each class can contain more than one device and location, centrally managed by the CloudHome service cloud.",
                                "x-examples": {
                                    "devices": [
                                        {
                                            "deviceID": "123",
                                            "deviceName": "frontDoorLock",
                                            "deviceClass": "safety",
                                            "spaceID": "home",
                                            "alexaCompatible": true,
                                            "storageUsed": 0.003,
                                            "storageFree": 1
                                        },
                                        {
                                            "deviceID": "456",
                                            "deviceName": "thermostat",
                                            "deviceClass": "comfort",
                                            "spaceID": "home",
                                            "alexaCompatible": true,
                                            "storageUsed": 0.025,
                                            "storageFree": 1
                                        },
                                        {
                                            "deviceID": "789",
                                            "deviceName": "sprinkler",
                                            "deviceClass": "convenience",
                                            "spaceID": "yard",
                                            "alexaCompatible": false,
                                            "storageUsed": 0.0018,
                                            "storageFree": 1
                                        }
                                    ],
                                    "device": [
                                        {
                                            "deviceID": "abc",
                                            "deviceName": "welcomeDroid",
                                            "deviceClass": "commercial",
                                            "spaceID": "office",
                                            "alexaCompatible": true,
                                            "storageUsed": 137,
                                            "storageFree": 300
                                        }
                                    ]
                                },
                                "properties": {
                                    "deviceID": {
                                        "type": "string",
                                        "description": "generated by the backend"
                                    },
                                    "deviceName": {
                                        "type": "string",
                                        "description": "user generated name"
                                    },
                                    "deviceClass": {
                                        "type": "string"
                                    },
                                    "spaceID": {
                                        "type": "string"
                                    },
                                    "alexaCompatible": {
                                        "type": "boolean"
                                    },
                                    "storageUsed": {
                                        "type": "number",
                                        "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)\n"
                                    },
                                    "storageFree": {
                                        "type": "number",
                                        "description": "in gigabytes as described in this [data measurement chart](http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html)"
                                    },
                                    "dateCreated": {
                                        "type": "string",
                                        "example": "2017-07-21T17:32:28Z"
                                    },
                                    "dateUpdated": {
                                        "type": "string",
                                        "example": "2017-07-21T17:32:28Z"
                                    }
                                },
                                "required": [
                                    "deviceName"
                                ]
                            }
                        }
                    },
                    "description": "The only field required by this operation is `'deviceid'`, however if left empty it will default to `'all'`. Such a request will result in error code `'400 Bad Request'` as this operation only allows deleting one device per request."
                },
                "responses": {
                    "200": {
                        "description": "Deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Status",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Generic status response schema for successful requests."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Error",
                                    "type": "object",
                                    "x-tags": [
                                        "IOT"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 404,
                                            "description": "status code as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found",
                                            "description": "status code description as defined by the [Hypertext Transfer Protocol (HTTP) Status Code Registry](https://www.ietf.org/assignments/http-status-codes/http-status-codes.xml)"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "description": "Standard status response schema for errors."
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "schema": {
                        "type": "string",
                        "example": "jetsonsFutureHome"
                    },
                    "name": "accountid",
                    "in": "path",
                    "required": true,
                    "description": "unique per account (see `'My Account'` for more information)"
                }
            ]
        }
    },
    "components": {
        "schemas": {},
        "parameters": {
            "accountid": {
                "schema": {
                    "type": "string",
                    "example": "jetsonsFutureHome"
                },
                "name": "accountid",
                "in": "path",
                "required": true,
                "description": "unique per account (see `'My Account'` for more information)"
            },
            "spaceid": {
                "schema": {
                    "type": "string",
                    "example": "seattle-office",
                    "default": "all"
                },
                "in": "query",
                "name": "spaceid",
                "description": "location associated with the devices (see `'My Spaces'` for more information)",
                "allowEmptyValue": true
            },
            "deviceName": {
                "schema": {
                    "type": "string",
                    "default": "newDevice",
                    "example": "garageCamera"
                },
                "in": "header",
                "name": "deviceName",
                "description": "devices in the same space require unique names or will be assigned the default name `'newDevice'`",
                "allowEmptyValue": true
            },
            "deviceid": {
                "schema": {
                    "type": "string",
                    "default": "all",
                    "example": "123abc"
                },
                "in": "header",
                "name": "deviceid",
                "description": "unique identifiers for devices registered on the service cloud, when empty it defaults to `'all'`",
                "allowEmptyValue": true,
                "required": true
            },
            "sort": {
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "default": "desc",
                    "example": "asc"
                },
                "in": "query",
                "name": "sort",
                "allowEmptyValue": true,
                "description": "will sort objects returned from the request"
            },
            "limit": {
                "schema": {
                    "type": "integer",
                    "default": 10,
                    "format": "int32",
                    "example": 15,
                    "maximum": 25,
                    "minimum": 1
                },
                "in": "query",
                "name": "limit",
                "allowEmptyValue": true,
                "description": "specify the number of results returned from the request"
            }
        }
    },
    "security": [
        {
            "CloudHome Key": []
        }
    ],
    "tags": [
        {
            "name": "devices",
            "description": "relative to device management",
            "externalDocs": {
                "url": "https://cloudhome.io/api/tags/devices"
            }
        },
        {
            "name": "IOT",
            "description": "relative to devices and the 'internet of things'",
            "externalDocs": {
                "url": "https://cloudhome.io/api/tags/IOT"
            }
        }
    ]
}